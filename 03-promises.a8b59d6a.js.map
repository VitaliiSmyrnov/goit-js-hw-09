{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhCUQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAACC,GACnCA,EAAEC,iBACF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcf,MAAMgB,OACnCC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,GAAIH,GAAS,GAAKI,GAAQ,GAAKC,GAAU,EACvCtB,EAAAuB,OAAOC,QAAQ,gCAEf,IAAK,IAAIC,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EACrDvB,EAAcuB,EAAUR,GAAOS,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAC/CJ,EAAAuB,OAAOK,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAC5D0B,OAAM,SAAAH,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACpBJ,EAAAuB,OAAOC,QAAQ,sBAAqCK,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE5Da,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formElem = document.querySelector('.form');\n\nformElem.addEventListener('submit', (e) => {\n  e.preventDefault();\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  if (delay <= 0 || step <= 0 || amount <= 0) {\n    Notify.failure(\"values must be positive\");\n  } else {\n    for (let position = 1; position <= amount; position += 1) {\n      createPromise(position, delay).then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }).catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });;\n      delay += step;\n    }\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","Notify","failure","position1","then","param","success","concat","catch"],"version":3,"file":"03-promises.a8b59d6a.js.map"}