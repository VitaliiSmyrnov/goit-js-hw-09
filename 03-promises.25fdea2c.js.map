{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEiBC,SAASC,cAAc,SAAxC,MACMC,EAAiBF,SAASC,cAAc,kBACxCE,EAAqBH,SAASC,cAAc,iBAC5CG,EAAkBJ,SAASC,cAAc,mBAoB/C,SAASI,EAAcC,EAAUC,GACTC,KAAKC,Q,CApBbT,SAASC,cAAc,gBAG/BS,iBAAiB,SAAUC,IACjCA,EAAEC,iBACF,MAAML,EAAQL,EAAeW,MACvBC,EAAOX,EAAmBU,MAC1BE,EAASX,EAAgBS,MAE/B,GAAe,KAAXN,GAAiBA,EAAQ,GAAgB,KAATO,GAAeA,EAAO,GAAkB,KAAXC,GAAiBA,EAAS,EACzFjB,EAAAkB,OAAOC,QAAQ,uEAEf,IAAK,IAAIX,EAAW,EAAGA,GAAYS,EAAQT,GAAY,EACrDD,EAAcC,EAAUC,GACxBA,GAASO,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formElem = document.querySelector('.form');\nconst inputDelayElem = document.querySelector('[name=\"delay\"]');\nconst inputDelayStepElem = document.querySelector('[name=\"step\"]');\nconst inputAmountElem = document.querySelector('[name=\"amount\"]');\nconst btnElem = document.querySelector('.form button');\n\n\nbtnElem.addEventListener('click', (e) => {\n  e.preventDefault();\n  const delay = inputDelayElem.value;\n  const step = inputDelayStepElem.value;\n  const amount = inputAmountElem.value;\n\n  if ((delay === '' || delay < 0) || (step === '' || step < 0) || (amount === '' || amount < 0)) {\n    Notify.failure(\"Please, fill in all the fields, value must be positive or zero\");\n  } else {\n    for (let position = 1; position <= amount; position += 1) {\n      createPromise(position, delay);\n      delay += step;\n    }\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","$47d4ff9957288465$var$inputDelayElem","$47d4ff9957288465$var$inputDelayStepElem","$47d4ff9957288465$var$inputAmountElem","$47d4ff9957288465$var$createPromise","position","delay","Math","random","addEventListener","e","preventDefault","value","step","amount","Notify","failure"],"version":3,"file":"03-promises.25fdea2c.js.map"}